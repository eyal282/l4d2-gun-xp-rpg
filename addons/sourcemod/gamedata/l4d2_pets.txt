"Games"
{
	"#default"
	{
		"Functions"
		{
			"SurvivorBehavior::SelectMoreDangerousThreat"
			{
				"signature"		"SurvivorBehavior::SelectMoreDangerousThreat"
				"callconv"		"thiscall"
				"return"		"cbaseentity"
				"this"			"ignore"
				"arguments"
				{
					"a1"	
					{
						"type"	"cbaseentity"
					}
					"a2"
					{
						"type"	"cbaseentity"
					}
					"a3"
					{
						"type"	"cbaseentity"
					}
					"a4"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"L4D1SurvivorBehavior::SelectMoreDangerousThreat"
			{
				"signature"		"L4D1SurvivorBehavior::SelectMoreDangerousThreat"
				"callconv"		"thiscall"
				"return"		"cbaseentity"
				"this"			"ignore"
				"arguments"
				{
					"a1"	
					{
						"type"	"cbaseentity"
					}
					"a2"
					{
						"type"	"cbaseentity"
					}
					"a3"
					{
						"type"	"cbaseentity"
					}
					"a4"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"SurvivorAttack::SelectTarget"
			{
				"signature"		"SurvivorAttack::SelectTarget"
				"callconv"		"thiscall"
				"return"		"cbaseentity"
				"this"			"ignore"
				"arguments"
				{
					"a1"	
					{
						"type"	"int"
					}
				}
			}
			"CLeap::OnTouch"
			{
				"signature"		"CLeap::OnTouch"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"a1"
					{
						"type"	"cbaseentity"
					}
				}
			}
		}
	}
	"left4dead2"
	{
		"Addresses"	// Added by Silvers
		{
			"SurvivorBehavior::SelectMoreDangerousThreat"
			{
				"windows"
				{
					"signature" "SurvivorBehavior::SelectMoreDangerousThreat"
					"read" "64"
				}
				"linux"
				{
					"signature" "SurvivorBehavior::SelectMoreDangerousThreat"
				}
			}
			"L4D1SurvivorBehavior::SelectMoreDangerousThreat"
			{
				"windows"
				{
					"signature" "L4D1SurvivorBehavior::SelectMoreDangerousThreat"
					"read" "45"
				}
				"linux"
				{
					"signature" "L4D1SurvivorBehavior::SelectMoreDangerousThreat"
				}
			}
		}

		"Signatures"
		{
			/*
			 *	SurvivorBehavior::SelectMoreDangerousThreat(INextBot const*,CBaseCombatCharacter const*,CBaseCombatCharacter*,CBaseCombatCharacter*)
			 *	Windows sig are maybe switched between this and the next one, IDK but both are required and require same params
			 */
			"SurvivorBehavior::SelectMoreDangerousThreat"
			{
				"library"	"server"
				"linux"		"@_ZNK16SurvivorBehavior25SelectMoreDangerousThreatEPK8INextBotPK20CBaseCombatCharacterPS3_S6_"
				"windows"	"\x4C\x34\x44\x31\x53\x75\x72\x76\x69\x76\x6F\x72\x4C\x65\x67\x73\x42\x61\x74\x74\x6C\x65\x53\x74\x61\x74\x69\x6F\x6E\x73"
				/* 4C 34 44 31 53 75 72 76 69 76 6F 72 4C 65 67 73 42 61 74 74 6C 65 53 74 61 74 69 6F 6E 73 */
				/* String: "L4D1SurvivorLegsBattleStations" and from here offset to VTable sub call */

				// Old method, breaks every update:
				// "windows"	"\x55\x8B\x2A\x51\x53\x89\x2A\x2A\x8B\x2A\x2A\x8B\x2A\x8B\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\xAC"
				/* 55 8B ? 51 53 89 ? ? 8B ? ? 8B ? 8B ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? AC */
				/* Search: No strings, use Vtable to find it */
			}
			/*
			 *	L4D1SurvivorBehavior::SelectMoreDangerousThreat(INextBot const*,CBaseCombatCharacter const*,CBaseCombatCharacter*,CBaseCombatCharacter*)
			 */
			"L4D1SurvivorBehavior::SelectMoreDangerousThreat"
			{
				"library"	"server"
				"linux"		"@_ZNK20L4D1SurvivorBehavior25SelectMoreDangerousThreatEPK8INextBotPK20CBaseCombatCharacterPS3_S6_"
				"windows"	"\x00\x20\x52\x45\x53\x55\x4D\x49\x4E\x47\x20"
				/* 00 20 52 45 53 55 4D 49 4E 47 20 */
				/* String: " RESUMING " and from here offset to VTable sub call */

				// Old method, breaks every update:
				// "windows"	"\x55\x8B\x2A\x51\x53\x89\x2A\x2A\x8B\x2A\x2A\x8B\x2A\x8B\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x7C"
				/* 55 8B ? 51 53 89 ? ? 8B ? ? 8B ? 8B ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 7C */
				/* Search: No strings, use Vtable to find it */
			}
			/*
			 *	SurvivorAttack::SelectTarget(SurvivorBot *)
			 */
			"SurvivorAttack::SelectTarget"
			{
				"library"	"server"
				"linux"		"@_ZN14SurvivorAttack12SelectTargetEP11SurvivorBot"
				"windows"	"\x55\x8B\x2A\x83\x2A\x2A\x53\x56\x8B\x2A\x2A\x8B\x2A\x8B\x90\x2A\x2A\x2A\x2A\x8B\x2A\x57"
				/* 55 8B ? 83 ? ? 53 56 8B ? ? 8B ? 8B 90 ? ? ? ? 8B ? 57 */
				/* Search: "Looking at melee shove target" to find SurvivorAttack::Update find target function from the calls */
			}
			/*
			 *	CLeap::OnTouch(CBaseEntity *)
			 */
			"CLeap::OnTouch"
			{
				"library"	"server"
				"linux"		"@_ZN5CLeap7OnTouchEP11CBaseEntity"
				"windows"	"\x55\x8B\x2A\x51\x8B\x2A\x2A\x2A\x2A\x2A\x89"
				/* 55 8B ? 51 8B ? ? ? ? ? 89 */
			}
		}
	}
}
